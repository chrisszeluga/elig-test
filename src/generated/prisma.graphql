type AggregateClinician {
  count: Int!
}

type AggregateGroupStatus {
  count: Int!
}

type AggregateIndividualStatus {
  count: Int!
}

type AggregatePractice {
  count: Int!
}

type BatchPayload {
  count: Long!
}

type Clinician {
  id: ID!
  created_at: DateTime!
  updated_at: DateTime!
  birth_state: String
  enrollment_id: String
  enrollment_type: String
  first_approval_date: DateTime
  first_name: String
  is_enrolled: Boolean
  last_approval_date: DateTime
  last_name: String
  middle_name: String
  npi: Int!
  pecos_id: String
  practices(where: PracticeWhereInput, orderBy: PracticeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Practice!]
}

type ClinicianConnection {
  pageInfo: PageInfo!
  edges: [ClinicianEdge]!
  aggregate: AggregateClinician!
}

input ClinicianCreateInput {
  id: ID
  birth_state: String
  enrollment_id: String
  enrollment_type: String
  first_approval_date: DateTime
  first_name: String
  is_enrolled: Boolean
  last_approval_date: DateTime
  last_name: String
  middle_name: String
  npi: Int!
  pecos_id: String
  practices: PracticeCreateManyWithoutCliniciansInput
}

input ClinicianCreateManyWithoutPracticesInput {
  create: [ClinicianCreateWithoutPracticesInput!]
  connect: [ClinicianWhereUniqueInput!]
}

input ClinicianCreateOneInput {
  create: ClinicianCreateInput
  connect: ClinicianWhereUniqueInput
}

input ClinicianCreateWithoutPracticesInput {
  id: ID
  birth_state: String
  enrollment_id: String
  enrollment_type: String
  first_approval_date: DateTime
  first_name: String
  is_enrolled: Boolean
  last_approval_date: DateTime
  last_name: String
  middle_name: String
  npi: Int!
  pecos_id: String
}

type ClinicianEdge {
  node: Clinician!
  cursor: String!
}

enum ClinicianOrderByInput {
  id_ASC
  id_DESC
  created_at_ASC
  created_at_DESC
  updated_at_ASC
  updated_at_DESC
  birth_state_ASC
  birth_state_DESC
  enrollment_id_ASC
  enrollment_id_DESC
  enrollment_type_ASC
  enrollment_type_DESC
  first_approval_date_ASC
  first_approval_date_DESC
  first_name_ASC
  first_name_DESC
  is_enrolled_ASC
  is_enrolled_DESC
  last_approval_date_ASC
  last_approval_date_DESC
  last_name_ASC
  last_name_DESC
  middle_name_ASC
  middle_name_DESC
  npi_ASC
  npi_DESC
  pecos_id_ASC
  pecos_id_DESC
}

type ClinicianPreviousValues {
  id: ID!
  created_at: DateTime!
  updated_at: DateTime!
  birth_state: String
  enrollment_id: String
  enrollment_type: String
  first_approval_date: DateTime
  first_name: String
  is_enrolled: Boolean
  last_approval_date: DateTime
  last_name: String
  middle_name: String
  npi: Int!
  pecos_id: String
}

input ClinicianScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  created_at: DateTime
  created_at_not: DateTime
  created_at_in: [DateTime!]
  created_at_not_in: [DateTime!]
  created_at_lt: DateTime
  created_at_lte: DateTime
  created_at_gt: DateTime
  created_at_gte: DateTime
  updated_at: DateTime
  updated_at_not: DateTime
  updated_at_in: [DateTime!]
  updated_at_not_in: [DateTime!]
  updated_at_lt: DateTime
  updated_at_lte: DateTime
  updated_at_gt: DateTime
  updated_at_gte: DateTime
  birth_state: String
  birth_state_not: String
  birth_state_in: [String!]
  birth_state_not_in: [String!]
  birth_state_lt: String
  birth_state_lte: String
  birth_state_gt: String
  birth_state_gte: String
  birth_state_contains: String
  birth_state_not_contains: String
  birth_state_starts_with: String
  birth_state_not_starts_with: String
  birth_state_ends_with: String
  birth_state_not_ends_with: String
  enrollment_id: String
  enrollment_id_not: String
  enrollment_id_in: [String!]
  enrollment_id_not_in: [String!]
  enrollment_id_lt: String
  enrollment_id_lte: String
  enrollment_id_gt: String
  enrollment_id_gte: String
  enrollment_id_contains: String
  enrollment_id_not_contains: String
  enrollment_id_starts_with: String
  enrollment_id_not_starts_with: String
  enrollment_id_ends_with: String
  enrollment_id_not_ends_with: String
  enrollment_type: String
  enrollment_type_not: String
  enrollment_type_in: [String!]
  enrollment_type_not_in: [String!]
  enrollment_type_lt: String
  enrollment_type_lte: String
  enrollment_type_gt: String
  enrollment_type_gte: String
  enrollment_type_contains: String
  enrollment_type_not_contains: String
  enrollment_type_starts_with: String
  enrollment_type_not_starts_with: String
  enrollment_type_ends_with: String
  enrollment_type_not_ends_with: String
  first_approval_date: DateTime
  first_approval_date_not: DateTime
  first_approval_date_in: [DateTime!]
  first_approval_date_not_in: [DateTime!]
  first_approval_date_lt: DateTime
  first_approval_date_lte: DateTime
  first_approval_date_gt: DateTime
  first_approval_date_gte: DateTime
  first_name: String
  first_name_not: String
  first_name_in: [String!]
  first_name_not_in: [String!]
  first_name_lt: String
  first_name_lte: String
  first_name_gt: String
  first_name_gte: String
  first_name_contains: String
  first_name_not_contains: String
  first_name_starts_with: String
  first_name_not_starts_with: String
  first_name_ends_with: String
  first_name_not_ends_with: String
  is_enrolled: Boolean
  is_enrolled_not: Boolean
  last_approval_date: DateTime
  last_approval_date_not: DateTime
  last_approval_date_in: [DateTime!]
  last_approval_date_not_in: [DateTime!]
  last_approval_date_lt: DateTime
  last_approval_date_lte: DateTime
  last_approval_date_gt: DateTime
  last_approval_date_gte: DateTime
  last_name: String
  last_name_not: String
  last_name_in: [String!]
  last_name_not_in: [String!]
  last_name_lt: String
  last_name_lte: String
  last_name_gt: String
  last_name_gte: String
  last_name_contains: String
  last_name_not_contains: String
  last_name_starts_with: String
  last_name_not_starts_with: String
  last_name_ends_with: String
  last_name_not_ends_with: String
  middle_name: String
  middle_name_not: String
  middle_name_in: [String!]
  middle_name_not_in: [String!]
  middle_name_lt: String
  middle_name_lte: String
  middle_name_gt: String
  middle_name_gte: String
  middle_name_contains: String
  middle_name_not_contains: String
  middle_name_starts_with: String
  middle_name_not_starts_with: String
  middle_name_ends_with: String
  middle_name_not_ends_with: String
  npi: Int
  npi_not: Int
  npi_in: [Int!]
  npi_not_in: [Int!]
  npi_lt: Int
  npi_lte: Int
  npi_gt: Int
  npi_gte: Int
  pecos_id: String
  pecos_id_not: String
  pecos_id_in: [String!]
  pecos_id_not_in: [String!]
  pecos_id_lt: String
  pecos_id_lte: String
  pecos_id_gt: String
  pecos_id_gte: String
  pecos_id_contains: String
  pecos_id_not_contains: String
  pecos_id_starts_with: String
  pecos_id_not_starts_with: String
  pecos_id_ends_with: String
  pecos_id_not_ends_with: String
  AND: [ClinicianScalarWhereInput!]
  OR: [ClinicianScalarWhereInput!]
  NOT: [ClinicianScalarWhereInput!]
}

type ClinicianSubscriptionPayload {
  mutation: MutationType!
  node: Clinician
  updatedFields: [String!]
  previousValues: ClinicianPreviousValues
}

input ClinicianSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ClinicianWhereInput
  AND: [ClinicianSubscriptionWhereInput!]
  OR: [ClinicianSubscriptionWhereInput!]
  NOT: [ClinicianSubscriptionWhereInput!]
}

input ClinicianUpdateDataInput {
  birth_state: String
  enrollment_id: String
  enrollment_type: String
  first_approval_date: DateTime
  first_name: String
  is_enrolled: Boolean
  last_approval_date: DateTime
  last_name: String
  middle_name: String
  npi: Int
  pecos_id: String
  practices: PracticeUpdateManyWithoutCliniciansInput
}

input ClinicianUpdateInput {
  birth_state: String
  enrollment_id: String
  enrollment_type: String
  first_approval_date: DateTime
  first_name: String
  is_enrolled: Boolean
  last_approval_date: DateTime
  last_name: String
  middle_name: String
  npi: Int
  pecos_id: String
  practices: PracticeUpdateManyWithoutCliniciansInput
}

input ClinicianUpdateManyDataInput {
  birth_state: String
  enrollment_id: String
  enrollment_type: String
  first_approval_date: DateTime
  first_name: String
  is_enrolled: Boolean
  last_approval_date: DateTime
  last_name: String
  middle_name: String
  npi: Int
  pecos_id: String
}

input ClinicianUpdateManyMutationInput {
  birth_state: String
  enrollment_id: String
  enrollment_type: String
  first_approval_date: DateTime
  first_name: String
  is_enrolled: Boolean
  last_approval_date: DateTime
  last_name: String
  middle_name: String
  npi: Int
  pecos_id: String
}

input ClinicianUpdateManyWithoutPracticesInput {
  create: [ClinicianCreateWithoutPracticesInput!]
  delete: [ClinicianWhereUniqueInput!]
  connect: [ClinicianWhereUniqueInput!]
  set: [ClinicianWhereUniqueInput!]
  disconnect: [ClinicianWhereUniqueInput!]
  update: [ClinicianUpdateWithWhereUniqueWithoutPracticesInput!]
  upsert: [ClinicianUpsertWithWhereUniqueWithoutPracticesInput!]
  deleteMany: [ClinicianScalarWhereInput!]
  updateMany: [ClinicianUpdateManyWithWhereNestedInput!]
}

input ClinicianUpdateManyWithWhereNestedInput {
  where: ClinicianScalarWhereInput!
  data: ClinicianUpdateManyDataInput!
}

input ClinicianUpdateOneRequiredInput {
  create: ClinicianCreateInput
  update: ClinicianUpdateDataInput
  upsert: ClinicianUpsertNestedInput
  connect: ClinicianWhereUniqueInput
}

input ClinicianUpdateWithoutPracticesDataInput {
  birth_state: String
  enrollment_id: String
  enrollment_type: String
  first_approval_date: DateTime
  first_name: String
  is_enrolled: Boolean
  last_approval_date: DateTime
  last_name: String
  middle_name: String
  npi: Int
  pecos_id: String
}

input ClinicianUpdateWithWhereUniqueWithoutPracticesInput {
  where: ClinicianWhereUniqueInput!
  data: ClinicianUpdateWithoutPracticesDataInput!
}

input ClinicianUpsertNestedInput {
  update: ClinicianUpdateDataInput!
  create: ClinicianCreateInput!
}

input ClinicianUpsertWithWhereUniqueWithoutPracticesInput {
  where: ClinicianWhereUniqueInput!
  update: ClinicianUpdateWithoutPracticesDataInput!
  create: ClinicianCreateWithoutPracticesInput!
}

input ClinicianWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  created_at: DateTime
  created_at_not: DateTime
  created_at_in: [DateTime!]
  created_at_not_in: [DateTime!]
  created_at_lt: DateTime
  created_at_lte: DateTime
  created_at_gt: DateTime
  created_at_gte: DateTime
  updated_at: DateTime
  updated_at_not: DateTime
  updated_at_in: [DateTime!]
  updated_at_not_in: [DateTime!]
  updated_at_lt: DateTime
  updated_at_lte: DateTime
  updated_at_gt: DateTime
  updated_at_gte: DateTime
  birth_state: String
  birth_state_not: String
  birth_state_in: [String!]
  birth_state_not_in: [String!]
  birth_state_lt: String
  birth_state_lte: String
  birth_state_gt: String
  birth_state_gte: String
  birth_state_contains: String
  birth_state_not_contains: String
  birth_state_starts_with: String
  birth_state_not_starts_with: String
  birth_state_ends_with: String
  birth_state_not_ends_with: String
  enrollment_id: String
  enrollment_id_not: String
  enrollment_id_in: [String!]
  enrollment_id_not_in: [String!]
  enrollment_id_lt: String
  enrollment_id_lte: String
  enrollment_id_gt: String
  enrollment_id_gte: String
  enrollment_id_contains: String
  enrollment_id_not_contains: String
  enrollment_id_starts_with: String
  enrollment_id_not_starts_with: String
  enrollment_id_ends_with: String
  enrollment_id_not_ends_with: String
  enrollment_type: String
  enrollment_type_not: String
  enrollment_type_in: [String!]
  enrollment_type_not_in: [String!]
  enrollment_type_lt: String
  enrollment_type_lte: String
  enrollment_type_gt: String
  enrollment_type_gte: String
  enrollment_type_contains: String
  enrollment_type_not_contains: String
  enrollment_type_starts_with: String
  enrollment_type_not_starts_with: String
  enrollment_type_ends_with: String
  enrollment_type_not_ends_with: String
  first_approval_date: DateTime
  first_approval_date_not: DateTime
  first_approval_date_in: [DateTime!]
  first_approval_date_not_in: [DateTime!]
  first_approval_date_lt: DateTime
  first_approval_date_lte: DateTime
  first_approval_date_gt: DateTime
  first_approval_date_gte: DateTime
  first_name: String
  first_name_not: String
  first_name_in: [String!]
  first_name_not_in: [String!]
  first_name_lt: String
  first_name_lte: String
  first_name_gt: String
  first_name_gte: String
  first_name_contains: String
  first_name_not_contains: String
  first_name_starts_with: String
  first_name_not_starts_with: String
  first_name_ends_with: String
  first_name_not_ends_with: String
  is_enrolled: Boolean
  is_enrolled_not: Boolean
  last_approval_date: DateTime
  last_approval_date_not: DateTime
  last_approval_date_in: [DateTime!]
  last_approval_date_not_in: [DateTime!]
  last_approval_date_lt: DateTime
  last_approval_date_lte: DateTime
  last_approval_date_gt: DateTime
  last_approval_date_gte: DateTime
  last_name: String
  last_name_not: String
  last_name_in: [String!]
  last_name_not_in: [String!]
  last_name_lt: String
  last_name_lte: String
  last_name_gt: String
  last_name_gte: String
  last_name_contains: String
  last_name_not_contains: String
  last_name_starts_with: String
  last_name_not_starts_with: String
  last_name_ends_with: String
  last_name_not_ends_with: String
  middle_name: String
  middle_name_not: String
  middle_name_in: [String!]
  middle_name_not_in: [String!]
  middle_name_lt: String
  middle_name_lte: String
  middle_name_gt: String
  middle_name_gte: String
  middle_name_contains: String
  middle_name_not_contains: String
  middle_name_starts_with: String
  middle_name_not_starts_with: String
  middle_name_ends_with: String
  middle_name_not_ends_with: String
  npi: Int
  npi_not: Int
  npi_in: [Int!]
  npi_not_in: [Int!]
  npi_lt: Int
  npi_lte: Int
  npi_gt: Int
  npi_gte: Int
  pecos_id: String
  pecos_id_not: String
  pecos_id_in: [String!]
  pecos_id_not_in: [String!]
  pecos_id_lt: String
  pecos_id_lte: String
  pecos_id_gt: String
  pecos_id_gte: String
  pecos_id_contains: String
  pecos_id_not_contains: String
  pecos_id_starts_with: String
  pecos_id_not_starts_with: String
  pecos_id_ends_with: String
  pecos_id_not_ends_with: String
  practices_every: PracticeWhereInput
  practices_some: PracticeWhereInput
  practices_none: PracticeWhereInput
  AND: [ClinicianWhereInput!]
  OR: [ClinicianWhereInput!]
  NOT: [ClinicianWhereInput!]
}

input ClinicianWhereUniqueInput {
  id: ID
}

scalar DateTime

type GroupStatus {
  id: ID!
  created_at: DateTime!
  updated_at: DateTime!
  year: Int!
  run: Int!
  has_aci_hardship: Boolean
  has_extreme_hardship: Boolean
  has_ia_study: Boolean
  is_hospital_based: Boolean
  is_low_volume: Boolean
  practice: Practice!
}

type GroupStatusConnection {
  pageInfo: PageInfo!
  edges: [GroupStatusEdge]!
  aggregate: AggregateGroupStatus!
}

input GroupStatusCreateInput {
  id: ID
  year: Int!
  run: Int!
  has_aci_hardship: Boolean
  has_extreme_hardship: Boolean
  has_ia_study: Boolean
  is_hospital_based: Boolean
  is_low_volume: Boolean
  practice: PracticeCreateOneWithoutGroup_statusInput!
}

input GroupStatusCreateManyWithoutPracticeInput {
  create: [GroupStatusCreateWithoutPracticeInput!]
  connect: [GroupStatusWhereUniqueInput!]
}

input GroupStatusCreateWithoutPracticeInput {
  id: ID
  year: Int!
  run: Int!
  has_aci_hardship: Boolean
  has_extreme_hardship: Boolean
  has_ia_study: Boolean
  is_hospital_based: Boolean
  is_low_volume: Boolean
}

type GroupStatusEdge {
  node: GroupStatus!
  cursor: String!
}

enum GroupStatusOrderByInput {
  id_ASC
  id_DESC
  created_at_ASC
  created_at_DESC
  updated_at_ASC
  updated_at_DESC
  year_ASC
  year_DESC
  run_ASC
  run_DESC
  has_aci_hardship_ASC
  has_aci_hardship_DESC
  has_extreme_hardship_ASC
  has_extreme_hardship_DESC
  has_ia_study_ASC
  has_ia_study_DESC
  is_hospital_based_ASC
  is_hospital_based_DESC
  is_low_volume_ASC
  is_low_volume_DESC
}

type GroupStatusPreviousValues {
  id: ID!
  created_at: DateTime!
  updated_at: DateTime!
  year: Int!
  run: Int!
  has_aci_hardship: Boolean
  has_extreme_hardship: Boolean
  has_ia_study: Boolean
  is_hospital_based: Boolean
  is_low_volume: Boolean
}

input GroupStatusScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  created_at: DateTime
  created_at_not: DateTime
  created_at_in: [DateTime!]
  created_at_not_in: [DateTime!]
  created_at_lt: DateTime
  created_at_lte: DateTime
  created_at_gt: DateTime
  created_at_gte: DateTime
  updated_at: DateTime
  updated_at_not: DateTime
  updated_at_in: [DateTime!]
  updated_at_not_in: [DateTime!]
  updated_at_lt: DateTime
  updated_at_lte: DateTime
  updated_at_gt: DateTime
  updated_at_gte: DateTime
  year: Int
  year_not: Int
  year_in: [Int!]
  year_not_in: [Int!]
  year_lt: Int
  year_lte: Int
  year_gt: Int
  year_gte: Int
  run: Int
  run_not: Int
  run_in: [Int!]
  run_not_in: [Int!]
  run_lt: Int
  run_lte: Int
  run_gt: Int
  run_gte: Int
  has_aci_hardship: Boolean
  has_aci_hardship_not: Boolean
  has_extreme_hardship: Boolean
  has_extreme_hardship_not: Boolean
  has_ia_study: Boolean
  has_ia_study_not: Boolean
  is_hospital_based: Boolean
  is_hospital_based_not: Boolean
  is_low_volume: Boolean
  is_low_volume_not: Boolean
  AND: [GroupStatusScalarWhereInput!]
  OR: [GroupStatusScalarWhereInput!]
  NOT: [GroupStatusScalarWhereInput!]
}

type GroupStatusSubscriptionPayload {
  mutation: MutationType!
  node: GroupStatus
  updatedFields: [String!]
  previousValues: GroupStatusPreviousValues
}

input GroupStatusSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: GroupStatusWhereInput
  AND: [GroupStatusSubscriptionWhereInput!]
  OR: [GroupStatusSubscriptionWhereInput!]
  NOT: [GroupStatusSubscriptionWhereInput!]
}

input GroupStatusUpdateInput {
  year: Int
  run: Int
  has_aci_hardship: Boolean
  has_extreme_hardship: Boolean
  has_ia_study: Boolean
  is_hospital_based: Boolean
  is_low_volume: Boolean
  practice: PracticeUpdateOneRequiredWithoutGroup_statusInput
}

input GroupStatusUpdateManyDataInput {
  year: Int
  run: Int
  has_aci_hardship: Boolean
  has_extreme_hardship: Boolean
  has_ia_study: Boolean
  is_hospital_based: Boolean
  is_low_volume: Boolean
}

input GroupStatusUpdateManyMutationInput {
  year: Int
  run: Int
  has_aci_hardship: Boolean
  has_extreme_hardship: Boolean
  has_ia_study: Boolean
  is_hospital_based: Boolean
  is_low_volume: Boolean
}

input GroupStatusUpdateManyWithoutPracticeInput {
  create: [GroupStatusCreateWithoutPracticeInput!]
  delete: [GroupStatusWhereUniqueInput!]
  connect: [GroupStatusWhereUniqueInput!]
  set: [GroupStatusWhereUniqueInput!]
  disconnect: [GroupStatusWhereUniqueInput!]
  update: [GroupStatusUpdateWithWhereUniqueWithoutPracticeInput!]
  upsert: [GroupStatusUpsertWithWhereUniqueWithoutPracticeInput!]
  deleteMany: [GroupStatusScalarWhereInput!]
  updateMany: [GroupStatusUpdateManyWithWhereNestedInput!]
}

input GroupStatusUpdateManyWithWhereNestedInput {
  where: GroupStatusScalarWhereInput!
  data: GroupStatusUpdateManyDataInput!
}

input GroupStatusUpdateWithoutPracticeDataInput {
  year: Int
  run: Int
  has_aci_hardship: Boolean
  has_extreme_hardship: Boolean
  has_ia_study: Boolean
  is_hospital_based: Boolean
  is_low_volume: Boolean
}

input GroupStatusUpdateWithWhereUniqueWithoutPracticeInput {
  where: GroupStatusWhereUniqueInput!
  data: GroupStatusUpdateWithoutPracticeDataInput!
}

input GroupStatusUpsertWithWhereUniqueWithoutPracticeInput {
  where: GroupStatusWhereUniqueInput!
  update: GroupStatusUpdateWithoutPracticeDataInput!
  create: GroupStatusCreateWithoutPracticeInput!
}

input GroupStatusWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  created_at: DateTime
  created_at_not: DateTime
  created_at_in: [DateTime!]
  created_at_not_in: [DateTime!]
  created_at_lt: DateTime
  created_at_lte: DateTime
  created_at_gt: DateTime
  created_at_gte: DateTime
  updated_at: DateTime
  updated_at_not: DateTime
  updated_at_in: [DateTime!]
  updated_at_not_in: [DateTime!]
  updated_at_lt: DateTime
  updated_at_lte: DateTime
  updated_at_gt: DateTime
  updated_at_gte: DateTime
  year: Int
  year_not: Int
  year_in: [Int!]
  year_not_in: [Int!]
  year_lt: Int
  year_lte: Int
  year_gt: Int
  year_gte: Int
  run: Int
  run_not: Int
  run_in: [Int!]
  run_not_in: [Int!]
  run_lt: Int
  run_lte: Int
  run_gt: Int
  run_gte: Int
  has_aci_hardship: Boolean
  has_aci_hardship_not: Boolean
  has_extreme_hardship: Boolean
  has_extreme_hardship_not: Boolean
  has_ia_study: Boolean
  has_ia_study_not: Boolean
  is_hospital_based: Boolean
  is_hospital_based_not: Boolean
  is_low_volume: Boolean
  is_low_volume_not: Boolean
  practice: PracticeWhereInput
  AND: [GroupStatusWhereInput!]
  OR: [GroupStatusWhereInput!]
  NOT: [GroupStatusWhereInput!]
}

input GroupStatusWhereUniqueInput {
  id: ID
}

type IndividualStatus {
  id: ID!
  clinician: Clinician!
  practice: Practice!
  created_at: DateTime!
  updated_at: DateTime!
  year: Int!
  run: Int!
  has_aci_hardship: Boolean
  has_extreme_hardship: Boolean
  has_ia_study: Boolean
  is_hospital_based: Boolean
  is_low_volume: Boolean
}

type IndividualStatusConnection {
  pageInfo: PageInfo!
  edges: [IndividualStatusEdge]!
  aggregate: AggregateIndividualStatus!
}

input IndividualStatusCreateInput {
  id: ID
  clinician: ClinicianCreateOneInput!
  practice: PracticeCreateOneInput!
  year: Int!
  run: Int!
  has_aci_hardship: Boolean
  has_extreme_hardship: Boolean
  has_ia_study: Boolean
  is_hospital_based: Boolean
  is_low_volume: Boolean
}

type IndividualStatusEdge {
  node: IndividualStatus!
  cursor: String!
}

enum IndividualStatusOrderByInput {
  id_ASC
  id_DESC
  created_at_ASC
  created_at_DESC
  updated_at_ASC
  updated_at_DESC
  year_ASC
  year_DESC
  run_ASC
  run_DESC
  has_aci_hardship_ASC
  has_aci_hardship_DESC
  has_extreme_hardship_ASC
  has_extreme_hardship_DESC
  has_ia_study_ASC
  has_ia_study_DESC
  is_hospital_based_ASC
  is_hospital_based_DESC
  is_low_volume_ASC
  is_low_volume_DESC
}

type IndividualStatusPreviousValues {
  id: ID!
  created_at: DateTime!
  updated_at: DateTime!
  year: Int!
  run: Int!
  has_aci_hardship: Boolean
  has_extreme_hardship: Boolean
  has_ia_study: Boolean
  is_hospital_based: Boolean
  is_low_volume: Boolean
}

type IndividualStatusSubscriptionPayload {
  mutation: MutationType!
  node: IndividualStatus
  updatedFields: [String!]
  previousValues: IndividualStatusPreviousValues
}

input IndividualStatusSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: IndividualStatusWhereInput
  AND: [IndividualStatusSubscriptionWhereInput!]
  OR: [IndividualStatusSubscriptionWhereInput!]
  NOT: [IndividualStatusSubscriptionWhereInput!]
}

input IndividualStatusUpdateInput {
  clinician: ClinicianUpdateOneRequiredInput
  practice: PracticeUpdateOneRequiredInput
  year: Int
  run: Int
  has_aci_hardship: Boolean
  has_extreme_hardship: Boolean
  has_ia_study: Boolean
  is_hospital_based: Boolean
  is_low_volume: Boolean
}

input IndividualStatusUpdateManyMutationInput {
  year: Int
  run: Int
  has_aci_hardship: Boolean
  has_extreme_hardship: Boolean
  has_ia_study: Boolean
  is_hospital_based: Boolean
  is_low_volume: Boolean
}

input IndividualStatusWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  clinician: ClinicianWhereInput
  practice: PracticeWhereInput
  created_at: DateTime
  created_at_not: DateTime
  created_at_in: [DateTime!]
  created_at_not_in: [DateTime!]
  created_at_lt: DateTime
  created_at_lte: DateTime
  created_at_gt: DateTime
  created_at_gte: DateTime
  updated_at: DateTime
  updated_at_not: DateTime
  updated_at_in: [DateTime!]
  updated_at_not_in: [DateTime!]
  updated_at_lt: DateTime
  updated_at_lte: DateTime
  updated_at_gt: DateTime
  updated_at_gte: DateTime
  year: Int
  year_not: Int
  year_in: [Int!]
  year_not_in: [Int!]
  year_lt: Int
  year_lte: Int
  year_gt: Int
  year_gte: Int
  run: Int
  run_not: Int
  run_in: [Int!]
  run_not_in: [Int!]
  run_lt: Int
  run_lte: Int
  run_gt: Int
  run_gte: Int
  has_aci_hardship: Boolean
  has_aci_hardship_not: Boolean
  has_extreme_hardship: Boolean
  has_extreme_hardship_not: Boolean
  has_ia_study: Boolean
  has_ia_study_not: Boolean
  is_hospital_based: Boolean
  is_hospital_based_not: Boolean
  is_low_volume: Boolean
  is_low_volume_not: Boolean
  AND: [IndividualStatusWhereInput!]
  OR: [IndividualStatusWhereInput!]
  NOT: [IndividualStatusWhereInput!]
}

input IndividualStatusWhereUniqueInput {
  id: ID
}

scalar Long

type Mutation {
  createClinician(data: ClinicianCreateInput!): Clinician!
  updateClinician(data: ClinicianUpdateInput!, where: ClinicianWhereUniqueInput!): Clinician
  updateManyClinicians(data: ClinicianUpdateManyMutationInput!, where: ClinicianWhereInput): BatchPayload!
  upsertClinician(where: ClinicianWhereUniqueInput!, create: ClinicianCreateInput!, update: ClinicianUpdateInput!): Clinician!
  deleteClinician(where: ClinicianWhereUniqueInput!): Clinician
  deleteManyClinicians(where: ClinicianWhereInput): BatchPayload!
  createGroupStatus(data: GroupStatusCreateInput!): GroupStatus!
  updateGroupStatus(data: GroupStatusUpdateInput!, where: GroupStatusWhereUniqueInput!): GroupStatus
  updateManyGroupStatuses(data: GroupStatusUpdateManyMutationInput!, where: GroupStatusWhereInput): BatchPayload!
  upsertGroupStatus(where: GroupStatusWhereUniqueInput!, create: GroupStatusCreateInput!, update: GroupStatusUpdateInput!): GroupStatus!
  deleteGroupStatus(where: GroupStatusWhereUniqueInput!): GroupStatus
  deleteManyGroupStatuses(where: GroupStatusWhereInput): BatchPayload!
  createIndividualStatus(data: IndividualStatusCreateInput!): IndividualStatus!
  updateIndividualStatus(data: IndividualStatusUpdateInput!, where: IndividualStatusWhereUniqueInput!): IndividualStatus
  updateManyIndividualStatuses(data: IndividualStatusUpdateManyMutationInput!, where: IndividualStatusWhereInput): BatchPayload!
  upsertIndividualStatus(where: IndividualStatusWhereUniqueInput!, create: IndividualStatusCreateInput!, update: IndividualStatusUpdateInput!): IndividualStatus!
  deleteIndividualStatus(where: IndividualStatusWhereUniqueInput!): IndividualStatus
  deleteManyIndividualStatuses(where: IndividualStatusWhereInput): BatchPayload!
  createPractice(data: PracticeCreateInput!): Practice!
  updatePractice(data: PracticeUpdateInput!, where: PracticeWhereUniqueInput!): Practice
  updateManyPractices(data: PracticeUpdateManyMutationInput!, where: PracticeWhereInput): BatchPayload!
  upsertPractice(where: PracticeWhereUniqueInput!, create: PracticeCreateInput!, update: PracticeUpdateInput!): Practice!
  deletePractice(where: PracticeWhereUniqueInput!): Practice
  deleteManyPractices(where: PracticeWhereInput): BatchPayload!
}

enum MutationType {
  CREATED
  UPDATED
  DELETED
}

interface Node {
  id: ID!
}

type PageInfo {
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
  endCursor: String
}

type Practice {
  id: ID!
  created_at: DateTime!
  updated_at: DateTime!
  enrollment_id: String
  enrollment_type: String
  first_approval_date: DateTime
  is_enrolled: Boolean
  last_approval_date: DateTime
  org_name: String
  pecos_id: String
  tin: Int!
  tin_type: String
  is_sole_proprietor: Boolean
  clinicians(where: ClinicianWhereInput, orderBy: ClinicianOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Clinician!]
  group_status(where: GroupStatusWhereInput, orderBy: GroupStatusOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [GroupStatus!]
}

type PracticeConnection {
  pageInfo: PageInfo!
  edges: [PracticeEdge]!
  aggregate: AggregatePractice!
}

input PracticeCreateInput {
  id: ID
  enrollment_id: String
  enrollment_type: String
  first_approval_date: DateTime
  is_enrolled: Boolean
  last_approval_date: DateTime
  org_name: String
  pecos_id: String
  tin: Int!
  tin_type: String
  is_sole_proprietor: Boolean
  clinicians: ClinicianCreateManyWithoutPracticesInput
  group_status: GroupStatusCreateManyWithoutPracticeInput
}

input PracticeCreateManyWithoutCliniciansInput {
  create: [PracticeCreateWithoutCliniciansInput!]
  connect: [PracticeWhereUniqueInput!]
}

input PracticeCreateOneInput {
  create: PracticeCreateInput
  connect: PracticeWhereUniqueInput
}

input PracticeCreateOneWithoutGroup_statusInput {
  create: PracticeCreateWithoutGroup_statusInput
  connect: PracticeWhereUniqueInput
}

input PracticeCreateWithoutCliniciansInput {
  id: ID
  enrollment_id: String
  enrollment_type: String
  first_approval_date: DateTime
  is_enrolled: Boolean
  last_approval_date: DateTime
  org_name: String
  pecos_id: String
  tin: Int!
  tin_type: String
  is_sole_proprietor: Boolean
  group_status: GroupStatusCreateManyWithoutPracticeInput
}

input PracticeCreateWithoutGroup_statusInput {
  id: ID
  enrollment_id: String
  enrollment_type: String
  first_approval_date: DateTime
  is_enrolled: Boolean
  last_approval_date: DateTime
  org_name: String
  pecos_id: String
  tin: Int!
  tin_type: String
  is_sole_proprietor: Boolean
  clinicians: ClinicianCreateManyWithoutPracticesInput
}

type PracticeEdge {
  node: Practice!
  cursor: String!
}

enum PracticeOrderByInput {
  id_ASC
  id_DESC
  created_at_ASC
  created_at_DESC
  updated_at_ASC
  updated_at_DESC
  enrollment_id_ASC
  enrollment_id_DESC
  enrollment_type_ASC
  enrollment_type_DESC
  first_approval_date_ASC
  first_approval_date_DESC
  is_enrolled_ASC
  is_enrolled_DESC
  last_approval_date_ASC
  last_approval_date_DESC
  org_name_ASC
  org_name_DESC
  pecos_id_ASC
  pecos_id_DESC
  tin_ASC
  tin_DESC
  tin_type_ASC
  tin_type_DESC
  is_sole_proprietor_ASC
  is_sole_proprietor_DESC
}

type PracticePreviousValues {
  id: ID!
  created_at: DateTime!
  updated_at: DateTime!
  enrollment_id: String
  enrollment_type: String
  first_approval_date: DateTime
  is_enrolled: Boolean
  last_approval_date: DateTime
  org_name: String
  pecos_id: String
  tin: Int!
  tin_type: String
  is_sole_proprietor: Boolean
}

input PracticeScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  created_at: DateTime
  created_at_not: DateTime
  created_at_in: [DateTime!]
  created_at_not_in: [DateTime!]
  created_at_lt: DateTime
  created_at_lte: DateTime
  created_at_gt: DateTime
  created_at_gte: DateTime
  updated_at: DateTime
  updated_at_not: DateTime
  updated_at_in: [DateTime!]
  updated_at_not_in: [DateTime!]
  updated_at_lt: DateTime
  updated_at_lte: DateTime
  updated_at_gt: DateTime
  updated_at_gte: DateTime
  enrollment_id: String
  enrollment_id_not: String
  enrollment_id_in: [String!]
  enrollment_id_not_in: [String!]
  enrollment_id_lt: String
  enrollment_id_lte: String
  enrollment_id_gt: String
  enrollment_id_gte: String
  enrollment_id_contains: String
  enrollment_id_not_contains: String
  enrollment_id_starts_with: String
  enrollment_id_not_starts_with: String
  enrollment_id_ends_with: String
  enrollment_id_not_ends_with: String
  enrollment_type: String
  enrollment_type_not: String
  enrollment_type_in: [String!]
  enrollment_type_not_in: [String!]
  enrollment_type_lt: String
  enrollment_type_lte: String
  enrollment_type_gt: String
  enrollment_type_gte: String
  enrollment_type_contains: String
  enrollment_type_not_contains: String
  enrollment_type_starts_with: String
  enrollment_type_not_starts_with: String
  enrollment_type_ends_with: String
  enrollment_type_not_ends_with: String
  first_approval_date: DateTime
  first_approval_date_not: DateTime
  first_approval_date_in: [DateTime!]
  first_approval_date_not_in: [DateTime!]
  first_approval_date_lt: DateTime
  first_approval_date_lte: DateTime
  first_approval_date_gt: DateTime
  first_approval_date_gte: DateTime
  is_enrolled: Boolean
  is_enrolled_not: Boolean
  last_approval_date: DateTime
  last_approval_date_not: DateTime
  last_approval_date_in: [DateTime!]
  last_approval_date_not_in: [DateTime!]
  last_approval_date_lt: DateTime
  last_approval_date_lte: DateTime
  last_approval_date_gt: DateTime
  last_approval_date_gte: DateTime
  org_name: String
  org_name_not: String
  org_name_in: [String!]
  org_name_not_in: [String!]
  org_name_lt: String
  org_name_lte: String
  org_name_gt: String
  org_name_gte: String
  org_name_contains: String
  org_name_not_contains: String
  org_name_starts_with: String
  org_name_not_starts_with: String
  org_name_ends_with: String
  org_name_not_ends_with: String
  pecos_id: String
  pecos_id_not: String
  pecos_id_in: [String!]
  pecos_id_not_in: [String!]
  pecos_id_lt: String
  pecos_id_lte: String
  pecos_id_gt: String
  pecos_id_gte: String
  pecos_id_contains: String
  pecos_id_not_contains: String
  pecos_id_starts_with: String
  pecos_id_not_starts_with: String
  pecos_id_ends_with: String
  pecos_id_not_ends_with: String
  tin: Int
  tin_not: Int
  tin_in: [Int!]
  tin_not_in: [Int!]
  tin_lt: Int
  tin_lte: Int
  tin_gt: Int
  tin_gte: Int
  tin_type: String
  tin_type_not: String
  tin_type_in: [String!]
  tin_type_not_in: [String!]
  tin_type_lt: String
  tin_type_lte: String
  tin_type_gt: String
  tin_type_gte: String
  tin_type_contains: String
  tin_type_not_contains: String
  tin_type_starts_with: String
  tin_type_not_starts_with: String
  tin_type_ends_with: String
  tin_type_not_ends_with: String
  is_sole_proprietor: Boolean
  is_sole_proprietor_not: Boolean
  AND: [PracticeScalarWhereInput!]
  OR: [PracticeScalarWhereInput!]
  NOT: [PracticeScalarWhereInput!]
}

type PracticeSubscriptionPayload {
  mutation: MutationType!
  node: Practice
  updatedFields: [String!]
  previousValues: PracticePreviousValues
}

input PracticeSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: PracticeWhereInput
  AND: [PracticeSubscriptionWhereInput!]
  OR: [PracticeSubscriptionWhereInput!]
  NOT: [PracticeSubscriptionWhereInput!]
}

input PracticeUpdateDataInput {
  enrollment_id: String
  enrollment_type: String
  first_approval_date: DateTime
  is_enrolled: Boolean
  last_approval_date: DateTime
  org_name: String
  pecos_id: String
  tin: Int
  tin_type: String
  is_sole_proprietor: Boolean
  clinicians: ClinicianUpdateManyWithoutPracticesInput
  group_status: GroupStatusUpdateManyWithoutPracticeInput
}

input PracticeUpdateInput {
  enrollment_id: String
  enrollment_type: String
  first_approval_date: DateTime
  is_enrolled: Boolean
  last_approval_date: DateTime
  org_name: String
  pecos_id: String
  tin: Int
  tin_type: String
  is_sole_proprietor: Boolean
  clinicians: ClinicianUpdateManyWithoutPracticesInput
  group_status: GroupStatusUpdateManyWithoutPracticeInput
}

input PracticeUpdateManyDataInput {
  enrollment_id: String
  enrollment_type: String
  first_approval_date: DateTime
  is_enrolled: Boolean
  last_approval_date: DateTime
  org_name: String
  pecos_id: String
  tin: Int
  tin_type: String
  is_sole_proprietor: Boolean
}

input PracticeUpdateManyMutationInput {
  enrollment_id: String
  enrollment_type: String
  first_approval_date: DateTime
  is_enrolled: Boolean
  last_approval_date: DateTime
  org_name: String
  pecos_id: String
  tin: Int
  tin_type: String
  is_sole_proprietor: Boolean
}

input PracticeUpdateManyWithoutCliniciansInput {
  create: [PracticeCreateWithoutCliniciansInput!]
  delete: [PracticeWhereUniqueInput!]
  connect: [PracticeWhereUniqueInput!]
  set: [PracticeWhereUniqueInput!]
  disconnect: [PracticeWhereUniqueInput!]
  update: [PracticeUpdateWithWhereUniqueWithoutCliniciansInput!]
  upsert: [PracticeUpsertWithWhereUniqueWithoutCliniciansInput!]
  deleteMany: [PracticeScalarWhereInput!]
  updateMany: [PracticeUpdateManyWithWhereNestedInput!]
}

input PracticeUpdateManyWithWhereNestedInput {
  where: PracticeScalarWhereInput!
  data: PracticeUpdateManyDataInput!
}

input PracticeUpdateOneRequiredInput {
  create: PracticeCreateInput
  update: PracticeUpdateDataInput
  upsert: PracticeUpsertNestedInput
  connect: PracticeWhereUniqueInput
}

input PracticeUpdateOneRequiredWithoutGroup_statusInput {
  create: PracticeCreateWithoutGroup_statusInput
  update: PracticeUpdateWithoutGroup_statusDataInput
  upsert: PracticeUpsertWithoutGroup_statusInput
  connect: PracticeWhereUniqueInput
}

input PracticeUpdateWithoutCliniciansDataInput {
  enrollment_id: String
  enrollment_type: String
  first_approval_date: DateTime
  is_enrolled: Boolean
  last_approval_date: DateTime
  org_name: String
  pecos_id: String
  tin: Int
  tin_type: String
  is_sole_proprietor: Boolean
  group_status: GroupStatusUpdateManyWithoutPracticeInput
}

input PracticeUpdateWithoutGroup_statusDataInput {
  enrollment_id: String
  enrollment_type: String
  first_approval_date: DateTime
  is_enrolled: Boolean
  last_approval_date: DateTime
  org_name: String
  pecos_id: String
  tin: Int
  tin_type: String
  is_sole_proprietor: Boolean
  clinicians: ClinicianUpdateManyWithoutPracticesInput
}

input PracticeUpdateWithWhereUniqueWithoutCliniciansInput {
  where: PracticeWhereUniqueInput!
  data: PracticeUpdateWithoutCliniciansDataInput!
}

input PracticeUpsertNestedInput {
  update: PracticeUpdateDataInput!
  create: PracticeCreateInput!
}

input PracticeUpsertWithoutGroup_statusInput {
  update: PracticeUpdateWithoutGroup_statusDataInput!
  create: PracticeCreateWithoutGroup_statusInput!
}

input PracticeUpsertWithWhereUniqueWithoutCliniciansInput {
  where: PracticeWhereUniqueInput!
  update: PracticeUpdateWithoutCliniciansDataInput!
  create: PracticeCreateWithoutCliniciansInput!
}

input PracticeWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  created_at: DateTime
  created_at_not: DateTime
  created_at_in: [DateTime!]
  created_at_not_in: [DateTime!]
  created_at_lt: DateTime
  created_at_lte: DateTime
  created_at_gt: DateTime
  created_at_gte: DateTime
  updated_at: DateTime
  updated_at_not: DateTime
  updated_at_in: [DateTime!]
  updated_at_not_in: [DateTime!]
  updated_at_lt: DateTime
  updated_at_lte: DateTime
  updated_at_gt: DateTime
  updated_at_gte: DateTime
  enrollment_id: String
  enrollment_id_not: String
  enrollment_id_in: [String!]
  enrollment_id_not_in: [String!]
  enrollment_id_lt: String
  enrollment_id_lte: String
  enrollment_id_gt: String
  enrollment_id_gte: String
  enrollment_id_contains: String
  enrollment_id_not_contains: String
  enrollment_id_starts_with: String
  enrollment_id_not_starts_with: String
  enrollment_id_ends_with: String
  enrollment_id_not_ends_with: String
  enrollment_type: String
  enrollment_type_not: String
  enrollment_type_in: [String!]
  enrollment_type_not_in: [String!]
  enrollment_type_lt: String
  enrollment_type_lte: String
  enrollment_type_gt: String
  enrollment_type_gte: String
  enrollment_type_contains: String
  enrollment_type_not_contains: String
  enrollment_type_starts_with: String
  enrollment_type_not_starts_with: String
  enrollment_type_ends_with: String
  enrollment_type_not_ends_with: String
  first_approval_date: DateTime
  first_approval_date_not: DateTime
  first_approval_date_in: [DateTime!]
  first_approval_date_not_in: [DateTime!]
  first_approval_date_lt: DateTime
  first_approval_date_lte: DateTime
  first_approval_date_gt: DateTime
  first_approval_date_gte: DateTime
  is_enrolled: Boolean
  is_enrolled_not: Boolean
  last_approval_date: DateTime
  last_approval_date_not: DateTime
  last_approval_date_in: [DateTime!]
  last_approval_date_not_in: [DateTime!]
  last_approval_date_lt: DateTime
  last_approval_date_lte: DateTime
  last_approval_date_gt: DateTime
  last_approval_date_gte: DateTime
  org_name: String
  org_name_not: String
  org_name_in: [String!]
  org_name_not_in: [String!]
  org_name_lt: String
  org_name_lte: String
  org_name_gt: String
  org_name_gte: String
  org_name_contains: String
  org_name_not_contains: String
  org_name_starts_with: String
  org_name_not_starts_with: String
  org_name_ends_with: String
  org_name_not_ends_with: String
  pecos_id: String
  pecos_id_not: String
  pecos_id_in: [String!]
  pecos_id_not_in: [String!]
  pecos_id_lt: String
  pecos_id_lte: String
  pecos_id_gt: String
  pecos_id_gte: String
  pecos_id_contains: String
  pecos_id_not_contains: String
  pecos_id_starts_with: String
  pecos_id_not_starts_with: String
  pecos_id_ends_with: String
  pecos_id_not_ends_with: String
  tin: Int
  tin_not: Int
  tin_in: [Int!]
  tin_not_in: [Int!]
  tin_lt: Int
  tin_lte: Int
  tin_gt: Int
  tin_gte: Int
  tin_type: String
  tin_type_not: String
  tin_type_in: [String!]
  tin_type_not_in: [String!]
  tin_type_lt: String
  tin_type_lte: String
  tin_type_gt: String
  tin_type_gte: String
  tin_type_contains: String
  tin_type_not_contains: String
  tin_type_starts_with: String
  tin_type_not_starts_with: String
  tin_type_ends_with: String
  tin_type_not_ends_with: String
  is_sole_proprietor: Boolean
  is_sole_proprietor_not: Boolean
  clinicians_every: ClinicianWhereInput
  clinicians_some: ClinicianWhereInput
  clinicians_none: ClinicianWhereInput
  group_status_every: GroupStatusWhereInput
  group_status_some: GroupStatusWhereInput
  group_status_none: GroupStatusWhereInput
  AND: [PracticeWhereInput!]
  OR: [PracticeWhereInput!]
  NOT: [PracticeWhereInput!]
}

input PracticeWhereUniqueInput {
  id: ID
}

type Query {
  clinician(where: ClinicianWhereUniqueInput!): Clinician
  clinicians(where: ClinicianWhereInput, orderBy: ClinicianOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Clinician]!
  cliniciansConnection(where: ClinicianWhereInput, orderBy: ClinicianOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ClinicianConnection!
  groupStatus(where: GroupStatusWhereUniqueInput!): GroupStatus
  groupStatuses(where: GroupStatusWhereInput, orderBy: GroupStatusOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [GroupStatus]!
  groupStatusesConnection(where: GroupStatusWhereInput, orderBy: GroupStatusOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): GroupStatusConnection!
  individualStatus(where: IndividualStatusWhereUniqueInput!): IndividualStatus
  individualStatuses(where: IndividualStatusWhereInput, orderBy: IndividualStatusOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [IndividualStatus]!
  individualStatusesConnection(where: IndividualStatusWhereInput, orderBy: IndividualStatusOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): IndividualStatusConnection!
  practice(where: PracticeWhereUniqueInput!): Practice
  practices(where: PracticeWhereInput, orderBy: PracticeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Practice]!
  practicesConnection(where: PracticeWhereInput, orderBy: PracticeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): PracticeConnection!
  node(id: ID!): Node
}

type Subscription {
  clinician(where: ClinicianSubscriptionWhereInput): ClinicianSubscriptionPayload
  groupStatus(where: GroupStatusSubscriptionWhereInput): GroupStatusSubscriptionPayload
  individualStatus(where: IndividualStatusSubscriptionWhereInput): IndividualStatusSubscriptionPayload
  practice(where: PracticeSubscriptionWhereInput): PracticeSubscriptionPayload
}
